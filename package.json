{
    "name": "language-haskell",
    "displayName": "Haskell Syntax Highlighting",
    "description": "Syntax support for the Haskell programming language.",
    "version": "2.5.0",
    "publisher": "justusadam",
    "engines": {
        "vscode": "^0.10.0"
    },
    "icon": "images/logo.png",
    "galleryBanner": {
        "color": "#293845",
        "theme": "dark"
    },
    "keywords": [
        "language",
        "haskell",
        "highlight",
        "syntax"
    ],
    "license": "BSD-3-Clause",
    "homepage": "https://github.com/JustusAdam/language-haskell",
    "repository": {
        "type": "git",
        "url": "https://github.com/JustusAdam/language-haskell.git"
    },
    "bugs": {
        "url": "https://github.com/JustusAdam/language-haskell/issues",
        "email": "dev@justus.science"
    },
    "categories": [
        "Languages"
    ],
    "activationEvents": [
        "onLanguage:haskell"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Haskell configuration",
            "properties": {
                "haskell.indentationRules.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc."
                }
            }
        },
        "languages": [
            {
                "id": "haskell",
                "aliases": [
                    "Haskell",
                    "haskell"
                ],
                "extensions": [
                    ".hs"
                ],
                "configuration": "./haskell-configuration.json"
            },
            {
                "id": "cabal",
                "aliases": [
                    "Cabal",
                    "cabal"
                ],
                "extensions": [
                    ".cabal"
                ],
                "configuration": "./cabal-configuration.json"
            },
            {
                "id": "literate haskell",
                "aliases": [
                    "Literate Haskell",
                    "literate Haskell"
                ],
                "extensions": [
                    ".lhs"
                ],
                "configuration": "./haskell-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "haskell",
                "scopeName": "source.haskell",
                "path": "./syntaxes/haskell.tmLanguage.json"
            },
            {
                "language": "cabal",
                "scopeName": "source.cabal",
                "path": "./syntaxes/cabal.tmLanguage.json"
            },
            {
                "language": "literate haskell",
                "scopeName": "text.tex.latex.haskell",
                "path": "./syntaxes/literateHaskell.tmLanguage.json"
            },
            {
                "scopeName": "markdown.haskell.codeblock",
                "path": "./syntaxes/codeblock-haskell.json",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.haskell": "haskell"
                }
            },
            {
                "scopeName": "markdown.lhaskell.codeblock",
                "path": "./syntaxes/codeblock-literate-haskell.json",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.lhaskell": "lhaskell"
                }
            },
            {
                "scopeName": "markdown.cabal.codeblock",
                "path": "./syntaxes/codeblock-cabal.json",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.cabal": "cabal"
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install"
    },
    "devDependencies": {
        "typescript": "^2.6.2",
        "vscode": "^0.11.0"
    }
}
